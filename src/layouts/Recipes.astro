---
import "../assets/styles/global.css";
import Navbar from "../components/layout/Navbar";
export interface Props {
  title: string;
}

const { frontmatter } = Astro.props;

function formatDate(date: string) {
  return new Date(date).toLocaleDateString("en-US", {
    day: "numeric",
    month: "short",
    year: "numeric",
  });
}
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/ico" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={frontmatter.description} />
    <title>{frontmatter.title}</title>
  </head>
  <body>
    <Navbar />
    <main>
      <div id="content-container" class="flex justify-center items-center">
        <article id="recipe" class="m-6 w-[40rem]">
          <h1 class="">
            {frontmatter.title}
          </h1>
          {
            frontmatter.image ? (
              <img
                src={frontmatter.image}
                alt={frontmatter.title}
                title={frontmatter.title}
                class="my-4"
              />
            ) : null
          }
          <div
            class="border-4 border-dotted border-purple-500 p-4 mt-4 capitalize flex flex-col"
          >
            <span class="text-[whitesmoke] text-2xl">
              <strong>Submitted by:{" "}</strong>{frontmatter.submittedBy} on {
                formatDate(frontmatter.submittedOn)
              }
            </span>
            <span class="text-[whitesmoke] text-2xl">
              <strong>Created on:{" "}</strong><time
                >{formatDate(frontmatter.createdOn)}</time
              >
            </span>
            <div id="yt-link-container">
              <a
                target="_blank"
                href={frontmatter.link}
                class="text-2xl yt-link">YouTube Link</a
              >
            </div>
          </div>
          <slot />
          <h2>Tags:</h2>
          <ul class="">
            {
              frontmatter.tags.map((tag: string) => (
                <li>
                  <a href={"/tags/" + tag.replace(/ /g, "-")}>{tag}</a>
                </li>
              ))
            }
          </ul>
        </article>
      </div>
    </main>
  </body>
</html>
